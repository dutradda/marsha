type Media implements Searchable {
    id: ID!
    title: String!
    type: MediaType!
    artists: [Person]!
    authors: [Person]!
    addedDate: String!
    releaseDate: String!
    groups: [GroupOfPeople]
    collections: [Collection]
    content: String
}

interface Searchable {
    id: ID!
}

type MediaType {
    id: ID!
    name: String!
}

type Person implements Searchable  {
    id: ID!
    name: String!
    location: Location!
    organization: Organization
    groups: [GroupOfPeople]
}

type Location {
    country: String!
    province: String!
    city: String!
    neighborhood: String
}

type Organization {
    name: String!
    location: Location!
}

type GroupOfPeople implements Searchable  {
    id: ID!
    name: String!
    people: [Person]
    collections: [Collection]
}

type Collection implements Searchable  {
    id: ID!
    name: String!
    medias: [Media]
    type: CollectionType
}

type CollectionType {
    id: ID!
    name: String!
}

type MediaStream {
    id: ID!
    uri: String!
    isRunning: Boolean!
}

interface MediaQueries {
    search(query: String, sorting: Sorting, filters: SearchFilters): [Searchable]!
    suggests(query: String): [Searchable]!
    getMedia(id: ID): Media!
    getCollection(collectionId: ID): [Media]!
    getMediaStream(mediaId: ID): MediaStream!
}

enum Sorting {
    byRelevance
    byNovelty
    byRecentAdded
    byOrganization
    byLocation
}

input SearchFilters {
    location: ID
    organization: ID
    artist: ID
    author: ID
    group: ID
    collection: ID
    novelty: Boolean
    recentAdded: Boolean
    searchableKind: SearchableKinds
}

enum SearchableKinds {
    media
    collection
    artist
    author
    group
}

interface MediaMutations {
    bulkInsertMedia(datas: [String]): [MediaInsertOutput]!
    bulkDeleteMedia(ids: [ID]): [Boolean]!
    bulkEditMedia(edits: [EditMedia]): [EditMediaOutput]!
    runMediaStream(id: ID): RunMediaStreamOutput!
}

union MediaInsertOutput = Media | Error

type Error {
    name: String!
    message: String!
    status: String
    extraInfo: String
}

input EditMedia {
    id: ID!
    add: [EditMediaItems]
    remove: [EditMediaItems]
}

input EditMediaItems {
    artistIds: [ID]
    authorIds: [ID]
    groupIds: [ID]
    collectionIds: [ID]
}

type EditMediaOutput {
    id: ID!
    addSuccess: [EditMediaOutputItems]
    addFails: [EditMediaOutputItems]
    removeSuccess: [EditMediaOutputItems]
    removeFails: [EditMediaOutputItems]
}

type EditMediaOutputItems {
    artists: [ID]
    authors: [ID]
    groups: [ID]
    collections: [ID]
}

union RunMediaStreamOutput = MediaStream | Error
